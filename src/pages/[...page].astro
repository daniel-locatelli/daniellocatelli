---
import {
  getAllBlocksByBlockId,
  getAllDatabases,
  getDatabaseByName,
} from "../lib/notion/client";
import type { Database, Page } from "../lib/notion-interfaces";
import PostBody from "../components/Notion/PostBody.astro";
import Base from "@/layouts/Base.astro";
import { importCoverImage } from "src/lib/blog-helpers";
import PostPreview from "@/components/PostPreview.astro";
import { Image } from "astro:assets";
import Header from "@/components/layout/Header.astro";
import Footer from "@/components/layout/Footer.astro";
import { siteConfig } from "@/site-config";
import type { SiteMeta } from "@/types";
import BaseHead from "@/components/BaseHead.astro";

export async function getStaticPaths() {
  const databases = await getAllDatabases();
  const paths = databases.flatMap((database) =>
    database.Pages.filter(
      (page: Page) => page.Name !== "Homepage" && database.Title === "Pages"
    ).map((page: Page) => ({
      params: {
        page: page.Slug,
      },
      props: { page },
    }))
  );
  return paths;
}

interface Props {
  page: Page;
}

const { page: slug } = Astro.params;
const { page } = Astro.props;

const [blocks] = await Promise.all([getAllBlocksByBlockId(page.PageId)]);

// Getting images dynamically with import.meta.glob()
// It only accepts string literals
// https://docs.astro.build/en/recipes/dynamically-importing-images/
const images = import.meta.glob<{ default: ImageMetadata }>(
  "/src/assets/notion/**/*.{jpeg,jpg,png,tiff,webp,gif,svg,avif}"
);

// Cover image
const coverImage = await importCoverImage(page, images);

let databases: Database[];

databases = await Promise.all(
  page.DatabasesRef!.map(async (db) => await getDatabaseByName(db.name!))
);
---

<html lang={siteConfig.lang}>
  <head>
    <BaseHead
      articleDate={page.DateStart}
      description={page.Description_en}
      ogImage={coverImage}
      title={page.Name}
    />
  </head>
  <body class="p-0 m-0 max-w-full h-full">
    <!-- <ThemeProvider /> -->
    <!-- <SkipLink /> -->
    <Header />
    <main id="main">
      <PostPreview databases={databases} />
    </main>
    <Footer />
    <style>
      html {
        scroll-snap-type: y mandatory;
        overflow-y: scroll;
      }
    </style>
  </body>
</html>
