---
import { getDatabaseByName } from "../lib/notion/client";
import type { Database, Page } from "../lib/notion-interfaces";
import {
  addSlugToName,
  importCoverImage,
  returnImageNameAsJpg,
} from "src/lib/blog-helpers";
import BaseHead from "@/components/BaseHead.astro";
import { siteConfig } from "@/site-config";
import { Image } from "astro:assets";
import logo from "../assets/logo-dl.svg";
import arrowRight from "../assets/arrow-right.svg";
import Footer from "@/components/layout/Footer.astro";

interface Props {
  page: Page;
}

let pagesDatabase = await getDatabaseByName("Pages");
const homepage = pagesDatabase.Pages.find((page) => page.Name === "Homepage")!;
const otherPages: Page[] = pagesDatabase.Pages.filter(
  (page) => page.Name !== "Homepage"
);

const images = import.meta.glob<{ default: ImageMetadata }>(
  "/src/assets/notion/**/*.{jpeg,jpg,png,tiff,webp,gif,svg,avif}"
);

// Cover image
const coverImage = await importCoverImage(homepage, images);

let coverUrl = "";
if (homepage.Cover) {
  const url = new URL(homepage.Cover.Url);
  const dir = "/notion/" + url.pathname.split("/").slice(-2)[0];
  const fileNameConverted = returnImageNameAsJpg(url);
  const fileNameWithSlug = addSlugToName(fileNameConverted, homepage.Slug);
  coverUrl = `${dir}/${fileNameWithSlug}`;
}
---

<html lang={siteConfig.lang}>
  <head>
    <BaseHead
      description={homepage.Description_en}
      title={homepage.Name}
      coverImage={coverUrl}
      coverAlt={homepage.CoverAlt || "Cover image"}
    />
  </head>
  <body class="m-0 p-0 h-full min-w-full">
    <main
      class="relative grid grid-rows-4 md:grid-cols-2 md:grid-rows-2 min-h-svh min-h-screen max-h-svh max-h-screen w-full overflow-hidden"
    >
      <a
        href="/"
        class="fixed h-20 w-24 md:h-40 md:w-48 z-30 p-4 mix-blend-difference top-0 md:top-1/2 md:left-1/2 transform md:-translate-x-1/2 md:-translate-y-1/2"
      >
        <Image class="w-full" src={logo} alt="Daniel Locatelli logo" />
      </a>
      {
        otherPages.map(async (page) => {
          // Import cover from database
          const coverImage = await importCoverImage(page, images);
          // link not on the cover/title, but just on the description
          return (
            <div class="relative" id="image-container">
              <a
                href={"/" + page.Slug}
                class="relative z-10 bg-black flex justify-center transition duration-700 h-full"
                id="cover"
              >
                <h2 class="z-20 absolute text-white top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 mix-blend-difference font-heading text-3xl md:text-6xl pointer-events-none animate-fade">
                  {page.Name}
                </h2>
                <Image
                  class="object-cover animate-fade"
                  src={coverImage}
                  alt={page.CoverAlt}
                  transition:name={page.Slug + "-image"}
                  widths={[300, 700, 1000, 1280, 1400, 1600, coverImage.width]}
                  sizes={`(max-width: 300px) 300px, (max-width: 700px) 700px, (max-width: 1000px) 1000px, (max-width: 1280px) 1280px, (max-width: 1400px) 1400px, (max-width: 1600px) 1600px, ${coverImage.width}px`}
                />
              </a>
              <a
                href={"/" + page.Slug}
                class="absolute z-0 inset-0 w-full h-full bg-white"
                id="link"
              >
                <div class="relative flex flex-col justify-evenly h-full items-center">
                  <h3 class="px-6 md:px-10 text-black text-center font-light font-body text-lg md:text-3xl text-balance">
                    {page.ShortDescription_en}
                  </h3>
                  <div class="flex flex-col justify-center">
                    <Image
                      src={arrowRight}
                      alt={"Go to " + page.Name}
                      class="h-5 w-5 md:h-8 md:w-8"
                    />
                  </div>
                </div>
              </a>
            </div>
          );
        })
      }
    </main>
    <Footer />
    <script src="../lib/home-scripts.ts"></script>
  </body>
</html>
