---
import { getDatabaseByName } from "../lib/notion/client";
import type { Database, Page } from "../lib/notion-interfaces";
import { importCoverImage } from "src/lib/blog-helpers";
import BaseHead from "@/components/BaseHead.astro";
import { siteConfig } from "@/site-config";
import { Image } from "astro:assets";
import logo from "../assets/logo-dl.svg";
import arrowRight from "../assets/arrow-right.svg";

interface Props {
  page: Page;
}

let pagesDatabase = await getDatabaseByName("Pages");
const homepage = pagesDatabase.Pages.find((page) => page.Name === "Homepage")!;
const otherPages: Page[] = pagesDatabase.Pages.filter(
  (page) => page.Name !== "Homepage"
);

const images = import.meta.glob<{ default: ImageMetadata }>(
  "/src/assets/notion/**/*.{jpeg,jpg,png,tiff,webp,gif,svg,avif}"
);

// Cover image
const coverImage = await importCoverImage(homepage, images);
---

<html lang={siteConfig.lang}>
  <head>
    <BaseHead description={homepage.Description_en} title="Home" />
  </head>
  <body class="m-0 p-0">
    <main id="main">
      <div
        class="absolute flex flex-col md:grid md:grid-cols-2 md:grid-rows-2 h-svh"
      >
        <a
          href="https://www.linkedin.com/in/daniel-locatelli/"
          class="fixed z-20 p-4 mix-blend-difference top-0 md:top-1/2 md:left-1/2 transform md:-translate-x-1/2 md:-translate-y-1/2"
        >
          <Image
            class="md:h-20 md:w-24"
            src={logo}
            alt="Daniel Locatelli logo"
            title="Click to go to my LinkedIn"
            width="50"
          />
        </a>
        {
          otherPages.map(async (page, index) => {
            let databases: Database[];
            databases = await Promise.all(
              page.DatabasesRef!.map(
                async (db) => await getDatabaseByName(db.name!)
              )
            );
            let mergedPages: Page[] = [];
            for (const database of databases) {
              mergedPages = mergedPages.concat(database.Pages);
            }
            mergedPages = mergedPages.slice(0, 5);
            // Import cover from database
            const coverImage = await importCoverImage(page, images);
            // link not on the cover/title, but just on the description
            return (
              <div
                class="
            relative
            flex
            h-1/4
            md:h-auto"
                id="image-container"
              >
                <div
                  class="relative z-10 bg-black flex justify-center transition duration-500"
                  id="cover"
                >
                  <h2
                    class="z-20 absolute opacity-0 text-white top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 mix-blend-difference font-heading text-3xl md:text-6xl transition ease-in duration-500 pointer-events-none"
                    data-replace="{ 'opacity-0': 'opacity-100' }"
                  >
                    {page.Name}
                  </h2>
                  <Image
                    class="object-cover opacity-0 transition ease-in duration-1000"
                    data-replace="{ 'opacity-0': 'opacity-40' }"
                    src={coverImage}
                    alt={page.CoverAlt}
                    transition:name={page.Slug + "-image"}
                    widths={[
                      300,
                      700,
                      1000,
                      1280,
                      1400,
                      1600,
                      coverImage.width,
                    ]}
                    sizes={`(max-width: 300px) 300px, (max-width: 700px) 700px, (max-width: 1000px) 1000px, (max-width: 1280px) 1280px, (max-width: 1400px) 1400px, (max-width: 1600px) 1600px, ${coverImage.width}px`}
                  />
                </div>
                <a
                  href={Astro.site + page.Slug}
                  class="absolute z-0 inset-0 w-full h-full"
                  id="link"
                >
                  <div class="relative flex flex-col justify-evenly h-full items-center">
                    <h3 class="px-6 md:px-10 text-black text-center font-body text-lg md:text-3xl text-balance">
                      {page.ShortDescription_en}
                    </h3>
                    <div class="flex flex-col justify-center">
                      <Image
                        src={arrowRight}
                        alt={"Go to " + page.Name}
                        class="h-5 w-5 md:h-8 md:w-8"
                      />
                    </div>
                  </div>
                </a>
              </div>
            );
          })
        }
      </div>
    </main>
    <script src="../lib/homeScripts.ts"></script>
  </body>
</html>
