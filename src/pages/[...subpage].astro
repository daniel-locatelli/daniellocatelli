---
import {
  SITE_TITLE,
  SITE_DESCRIPTION,
  SITE_HEROIMAGE,
  SITE_HEROIMAGEALT,
} from "../consts";
import {
  getAllBlocksByBlockId,
  getAllDatabases,
  getDatabaseByName,
} from "../lib/notion/client";
import type { Page } from "../lib/notion-interfaces";
import { importCoverImage } from "../lib/blog-helpers";
import { Image } from "astro:assets";
import Base from "@/layouts/Base.astro";
import PostBody from "@/components/Notion/PostBody.astro";

export async function getStaticPaths() {
  const databases = await getAllDatabases();

  const paths = databases.flatMap((database) =>
    // The main pages are in the other file
    database.Pages.filter(() => database.Title !== "Pages").map((subpage) => ({
      params: {
        subpage: subpage.Slug === "home" ? undefined : subpage.Slug,
      },
      props: { subpage: subpage },
    }))
  );
  console.dir(paths);

  return paths;
}

interface Props {
  subpage: Page;
}

const { subpage: slug } = Astro.params;
const { subpage } = Astro.props;

const [blocks] = await Promise.all([getAllBlocksByBlockId(subpage.PageId)]);

// Getting images dynamically with import.meta.glob()
// It only accepts string literals
// https://docs.astro.build/en/recipes/dynamically-importing-images/
const images = import.meta.glob<{ default: ImageMetadata }>(
  "/src/assets/notion/**/*.{jpeg,jpg,png,tiff,webp,gif,svg,avif}"
);

// Cover image
const image = await importCoverImage(subpage, images);
---

<Base meta={{ title: subpage.Name }}>
  <section>
    <h1 class="title mb-6">{subpage.Name}</h1>
    <p class="mb-4">
      <PostBody blocks={blocks} slug={slug!} />
    </p>
  </section>
  <!-- <section class="mt-16">
    <h2 class="title mb-4 text-xl">Technologies</h2>
    <dl class="space-y-4">
      {
        cactusTech.map(({ desc, href, title }) => (
          <div class="flex flex-col gap-2 md:flex-row">
            <dt>
              <span class="flex">
                <a
                  class="cactus-link"
                  href={href}
                  rel="noopener noreferrer"
                  target="_blank"
                >
                  {title}
                </a>
                :
              </span>
            </dt>
            <dd>{desc}</dd>
          </div>
        ))
      }
    </dl>
  </section> -->
</Base>
