---
import {
  getAllBlocksByBlockId,
  getAllDatabases,
  getDatabaseByName,
} from "../lib/notion/client";
import type { Page } from "../lib/notion-interfaces";
import { importCoverImage } from "../lib/blog-helpers";
import { Image } from "astro:assets";
import Base from "@/layouts/Base.astro";
import PostBody from "@/components/Notion/PostBody.astro";

export async function getStaticPaths() {
  const databases = await getAllDatabases();

  const paths = databases.flatMap((database) =>
    // The main pages are in the other file
    database.Pages.filter(() => database.Title !== "Pages").map((subpage) => ({
      params: { subpage: subpage.Slug },
      props: { subpage: subpage },
    }))
  );
  // console.dir(paths);

  return paths;
}

interface Props {
  subpage: Page;
}

const { subpage: slug } = Astro.params;
const { subpage } = Astro.props;

const [blocks] = await Promise.all([getAllBlocksByBlockId(subpage.PageId)]);

// Getting images dynamically with import.meta.glob()
// It only accepts string literals
// https://docs.astro.build/en/recipes/dynamically-importing-images/
const images = import.meta.glob<{ default: ImageMetadata }>(
  "/src/assets/notion/**/*.{jpeg,jpg,png,tiff,webp,gif,svg,avif}"
);

// Cover image
const image = await importCoverImage(subpage, images);
// console.log(subpage.Title);
---

<Base meta={{ title: subpage.Name }}>
  {
    image && (
      <Image
        class="rounded-md object-cover h-80 mb-4"
        src={image}
        alt={subpage.CoverAlt}
        transition:name={slug + "-image"}
      />
    )
  }
  <section>
    <h1 class="title mb-6 font-heading text-center">{subpage.Name}</h1>
    <p class="mb-4 font-body">
      <PostBody blocks={blocks} slug={slug!} />
    </p>
  </section>
</Base>
