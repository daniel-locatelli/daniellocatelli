---
import {
  type Block,
  type RichText,
  type Callout,
  type Emoji,
  type FileObject,
} from "../../../lib/notion-interfaces.ts";
import { snakeToKebab } from "../../../lib/style-helpers.ts";
import NotionRichText from "./RichText.astro";
import NotionBlocks from "../NotionBlocks.astro";

export interface Props {
  block: Block;
  headings: Block[];
  slug: string;
}

const { block, headings, slug } = Astro.props;
---

<div class={`callout ${snakeToKebab(block.Callout!.Color)}`}>
  {
    block.Callout!.Icon && (
      <div class="icon">
        {block.Callout!.Icon.Type === "emoji" ? (
          (block.Callout!.Icon as Emoji).Emoji
        ) : block.Callout!.Icon.Type === "external" ? (
          <img
            src={(block.Callout!.Icon as FileObject).Url}
            alt="Icon in a callout block"
          />
        ) : null}
      </div>
    )
  }
  <div>
    {
      block.Callout!.RichTexts.map((richText: RichText) => (
        <NotionRichText richText={richText} />
      ))
    }
    {
      block.Callout!.Children && (
        <NotionBlocks
          blocks={block.Callout!.Children}
          headings={headings}
          slug={slug}
        />
      )
    }
  </div>
</div>

<style>
  .callout {
    display: flex;
    align-items: center;
    margin: 0.4rem auto;
    padding: 16px 12px;
    width: 100%;
    font-size: 1rem;
    font-weight: 400;
    line-height: 1.6rem;
    border-radius: 3px;
    border-width: 1px;
    border-style: solid;
    border-color: transparent;
    background: var(--background-cards);
  }
  .callout > div {
    vertical-align: middle;
    margin: 0;
    line-height: 12px;
  }
  .callout > div.icon {
    margin-right: 0.7rem;
  }
  .callout > div.icon > img {
    width: 1.2rem;
    height: 1.2rem;
  }
</style>
