---
import * as interfaces from "../../../lib/notion-interfaces.ts";
import { buildHeadingId } from "../../../lib/blog-helpers.ts";
import RichText from "./RichText.astro";
import NotionBlocks from "../NotionBlocks.astro";

export interface Props {
  block: interfaces.Block;
  headings: interfaces.Block[];
  slug: string;
}

const { block, headings, slug } = Astro.props;

const id = buildHeadingId(block.Heading2!);
---

{
  block.Heading2!.IsToggleable ? (
    <details class="toggle w-full">
      <summary class="w-full">
        <a href={`#${id}`} id={id}>
          <h3 class="mt-2 px-2 md:px-0 w-full text-2xl">
            {block.Heading2!.RichTexts.map((richText: interfaces.RichText) => (
              <RichText richText={richText} />
            ))}
          </h3>
        </a>
      </summary>
      <div>
        {block.Heading2!.Children && (
          <NotionBlocks
            blocks={block.Heading2!.Children}
            headings={headings}
            slug={slug}
          />
        )}
      </div>
    </details>
  ) : (
    <a href={`#${id}`} id={id} class="w-full">
      <h3 class="mt-2 px-2 md:px-0 w-full text-2xl">
        {block.Heading2!.RichTexts.map((richText: interfaces.RichText) => (
          <RichText richText={richText} />
        ))}
      </h3>
    </a>
  )
}

<style>
  .toggle {
    margin: 1.6rem 0 0;
  }
  @media (max-width: 640px) {
    .toggle {
      margin: 1.2rem 0 0;
    }
  }

  .toggle > summary {
    cursor: pointer;
  }

  .toggle > summary > a {
    display: inline;
  }

  .toggle > summary > a > h4 {
    display: inline;
  }

  .toggle > div {
    margin-left: 1em;
  }
</style>
