---
import {
  type Block,
  type RichText,
  type List,
} from "../../../lib/notion-interfaces.ts";
import { snakeToKebab } from "../../../lib/style-helpers.ts";
import NotionRichText from "./RichText.astro";
import NotionBlocks from "../NotionBlocks.astro";
import "../../../styles/notion-color.css";

export interface Props {
  block: Block;
  headings: Block[];
  slug: string;
}

const { block, headings, slug } = Astro.props;

const blockList: List = {
  Type: block.Type,
  ListItems: [block],
};
---

<div class="to-do">
  {
    blockList.ListItems.filter((b: Block) => b.Type === "to_do").map(
      (b: Block) => (
        <div class={snakeToKebab(b.ToDo!.Color)}>
          <input type="checkbox" checked={b.ToDo!.Checked} disabled />
          {b.ToDo!.RichTexts.map((richText: RichText) => {
            if (b.ToDo!.Checked) {
              return (
                <s>
                  <NotionRichText richText={richText} />
                </s>
              );
            }
            return <NotionRichText richText={richText} />;
          })}
          {b.HasChildren && (
            <NotionBlocks
              blocks={b.ToDo!.Children!}
              headings={headings}
              slug={slug}
            />
          )}
        </div>
      )
    )
  }
</div>

<style>
  .to-do {
    color: #222;
    font-weight: 400;
    font-size: 1rem;
    line-height: 1.8rem;
    padding-inline-start: 1rem;
  }
  .to-do > div {
  }
  .to-do > div > input {
  }
  .to-do > div > s {
    color: var(--accents-3);
  }
</style>
