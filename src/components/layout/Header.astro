---
import type { Page } from "src/lib/notion-interfaces";
import { getDatabaseByName } from "src/lib/notion/client";
import { Image } from "astro:assets";
import logo from "../../assets/logo-dl.svg";
import globe from "../../assets/globe.svg";

let pagesDatabase = (await getDatabaseByName("Pages"))!;
let pages: Page[];
pages = pagesDatabase.Pages;

pages.sort((a, b) => {
  if (a.Name === "Homepage") return -1; // "Homepage" comes first
  if (b.Name === "Homepage") return 1; // Anything else comes after "Homepage"
  return a.Name.localeCompare(b.Name); // Alphabetical sorting for other pages
});

const url = new URL(Astro.request.url);

export interface Props {
  locale: string;
  slug: string;
}
const { locale, slug } = Astro.props as Props;
---

<header
  class="fixed w-full top-0 z-40 bg-black/[.5] backdrop-blur group py-2 px-4 flex justify-between sm:justify-center sm:items-center"
  id="main-header"
>
  <div class="flex w-full sm:max-w-3xl">
    <a
      aria-current={url.pathname === "/" ? "page" : false}
      class="inline-flex items-center sm:relative sm:inline-block h-10 w-12"
      href={locale === "en" ? "/" : "/" + locale}
    >
      <Image
        src={logo}
        alt="Daniel Locatelli logo"
        loading={"eager"}
        class="inline mix-blend-difference"
      />
    </a>
    <nav
      aria-label="Main menu"
      class="relative grow hidden flex-col items-end pt-6 group-[.menu-open]:z-50 group-[.menu-open]:flex sm:static sm:z-auto sm:mt-1 sm:flex sm:flex-row sm:items-center sm:py-0 font-body text-lg sm:text-base sm:justify-around"
      id="navigation-menu"
    >
      {
        pages.map(
          (page) =>
            page.Name !== "Homepage" && (
              <a
                aria-current={url.pathname === page.Slug ? "page" : false}
                class="sm:px-3 py-3 underline-offset-2 sm:py-0 sm:hover:underline"
                data-astro-prefetch
                href={
                  locale === "en"
                    ? "/" + page.Slug
                    : "/" + locale + "/" + page.Slug
                }
                title={page.Name}
              >
                {locale === "en" && page.Name}
                {locale === "de" && page.Name_de}
                {locale === "pt" && page.Name_pt}
              </a>
            )
        )
      }
      {
        locale === "en" && (
          <a
            class="sm:px-3 py-3 underline-offset-2 sm:py-0 sm:hover:underline"
            href={"/#about"}
          >
            About
          </a>
        )
      }
      {
        locale === "de" && (
          <a
            class="sm:px-3 py-3 underline-offset-2 sm:py-0 sm:hover:underline"
            href={"/de/#about"}
          >
            Über
          </a>
        )
      }
      {
        locale === "pt" && (
          <a
            class="sm:px-3 py-3 underline-offset-2 sm:py-0 sm:hover:underline"
            href={"/pt/#about"}
          >
            Sobre
          </a>
        )
      }

      <a
        title={locale === "en" ? "Mudar para Português" : "Change to English"}
        href={locale === "en" ? "/pt/" + slug : "/" + slug}
        class="sm:px-3 py-3 underline-offset-2 sm:py-0 sm:hover:underline"
      >
        <Image
          src={globe}
          alt="Daniel Locatelli logo"
          loading={"eager"}
          class="inline mix-blend-difference"
        />
        <div class="inline">{locale}</div>
      </a>
    </nav>
  </div>
  <mobile-button class="flex items-center h-10">
    <button
      aria-expanded="false"
      aria-haspopup="menu"
      aria-label="Open main menu"
      class="group relative ms-4 h-7 w-7 sm:invisible sm:hidden"
      id="toggle-navigation-menu"
      type="button"
    >
      <svg
        aria-hidden="true"
        class="absolute start-1/2 top-1/2 h-full w-full -translate-x-1/2 -translate-y-1/2 transition-all group-aria-expanded:scale-0 group-aria-expanded:opacity-0"
        fill="none"
        focusable="false"
        id="line-svg"
        stroke="white"
        stroke-width="1.5"
        viewBox="0 0 24 24"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M3.75 9h16.5m-16.5 6.75h16.5"
          stroke-linecap="round"
          stroke-linejoin="round"></path>
      </svg>
      <svg
        aria-hidden="true"
        class="absolute start-1/2 top-1/2 h-full w-full -translate-x-1/2 -translate-y-1/2 scale-0 text-accent opacity-0 transition-all group-aria-expanded:scale-100 group-aria-expanded:opacity-100"
        class="text-accent"
        fill="none"
        focusable="false"
        id="cross-svg"
        stroke="white"
        stroke-width="1.5"
        viewBox="0 0 24 24"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M6 18L18 6M6 6l12 12"
          stroke-linecap="round"
          stroke-linejoin="round"></path>
      </svg>
    </button>
  </mobile-button>
</header>

<script>
  import { toggleClass } from "@/utils";

  class MobileNavBtn extends HTMLElement {
    private headerEl: HTMLElement;
    private menuOpen: boolean;
    private mobileButtonEl: HTMLButtonElement;

    toggleMobileMenu = () => {
      toggleClass(this.headerEl, "menu-open");
      this.menuOpen = !this.menuOpen;
      this.mobileButtonEl.setAttribute(
        "aria-expanded",
        this.menuOpen.toString()
      );
    };

    constructor() {
      super();
      this.headerEl = document.getElementById("main-header")!;
      this.mobileButtonEl = this.querySelector("button") as HTMLButtonElement;
      this.menuOpen = false;

      this.mobileButtonEl.addEventListener("click", this.toggleMobileMenu);
    }
  }

  customElements.define("mobile-button", MobileNavBtn);
</script>
