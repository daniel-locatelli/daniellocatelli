---
import { Image } from "astro:assets";

import type { Database, Page } from "src/lib/notion-interfaces";
import { importCoverImage } from "src/lib/blog-helpers";

interface Props {
  databases: Database[];
}

const { databases } = Astro.props;

// Getting images dynamically with import.meta.glob()
// It only accepts string literals
// https://docs.astro.build/en/recipes/dynamically-importing-images/
const images = import.meta.glob<{ default: ImageMetadata }>(
  "/src/assets/notion/**/*.{jpeg,jpg,png,tiff,webp,gif,svg,avif}"
);
---

<div class="relative flex flex-col">
  {
    databases.map((db) => {
      return (
        <section aria-label={db.Title} class="relative w-full">
          <ul class="relative space-y-0 w-full">
            {db.Pages.map(async (page) => {
              let image = await importCoverImage(page, images);
              return (
                <article class="relative flex flex-col bg-clip-border h-svh h-screen w-full">
                  <a
                    class="flex transition w-full h-full opacity-80 hover:opacity-100"
                    href={Astro.site + page.Slug}
                  >
                    <div class="absolute flex flex-col z-10 w-full h-full text-center justify-center transition">
                      <h2 class="p-2 text-3xl md:text-5xl text-white dark:text-white font-heading text-balance bg-black/60">
                        {page.Name}
                      </h2>
                    </div>
                    <div class="absolute flex justify-between h-full w-full">
                      {image && (
                        <Image
                          class="object-cover h-full w-full"
                          src={image}
                          alt={page.CoverAlt}
                          transition:name={page.Slug + "-image"}
                        />
                      )}
                    </div>
                  </a>
                </article>
              );
            })}
          </ul>
        </section>
      );
    })
  }
</div>
